{
  "homestead": {
    "registrar": {
      "domain": "radicle.eth",
      "address": "0x37723287Ae6F34866d82EE623401f92Ec9013154"
    },
    "radToken": {
      "address": "0x31c8EAcBFFdD875c74b94b077895Bd78CF1E64A3"
    },
    "orgFactory": {
      "address": "0x7c4D590168A9019995e072f9c1eCfc1fc356bEd4"
    },
    "orgs": {
      "subgraph": "https://api.thegraph.com/subgraphs/name/radicle-dev/radicle-orgs",
      "contractHash": "0x0ab2c41a698802e4cd5c9c69aa24410e15e0a7726a1061b0adb5bd80eea37f9d"
    },
    "safe": {
      "api": "https://safe-transaction.gnosis.io/api/v1",
      "viewer": "https://gnosis-safe.io/app/#/safes"
    },
    "tokens": []
  },
  "ropsten": {
    "registrar": {
      "domain": "rad.eth",
      "address": "0xb31441c140E92Ca20A0141D68b13b10ca051e40a"
    },
    "radToken": {
      "address": "0x59b5eee36f5fa52400A136Fd4630Ee2bF126a4C0"
    },
    "orgFactory": {
      "address": "0xc074cDd9541960B0AA72D90c8bC642F6ae9C4032"
    },
    "orgs": {
      "subgraph": "https://api.thegraph.com/subgraphs/name/radicle-dev/radicle-orgs-ropsten",
      "contractHash": "0x0ab2c41a698802e4cd5c9c69aa24410e15e0a7726a1061b0adb5bd80eea37f9d"
    },
    "safe": {
      "api": null,
      "viewer": null
    },
    "tokens": []
  },
  "rinkeby": {
    "registrar": {
      "domain": "radicle.eth",
      "address": "0x0000000000000000000000000000000000000000"
    },
    "radToken": {
      "address": "0x5592ec0cfb4dbc12d3ab100b257153436a1f0fea"
    },
    "orgFactory": {
      "address": "0x57962Eb188146A4942c44545a97478d64dc9e4A5"
    },
    "orgs": {
      "subgraph": "https://api.thegraph.com/subgraphs/name/radicle-dev/radicle-orgs-rinkeby",
      "contractHash": "0x0ab2c41a698802e4cd5c9c69aa24410e15e0a7726a1061b0adb5bd80eea37f9d"
    },
    "safe": {
      "api": "https://safe-transaction.rinkeby.gnosis.io/api/v1",
      "viewer": "https://rinkeby.gnosis-safe.io/app/#/safes"
    },
    "tokens": []
  },
  "abi": {
    "registrar": [
      "function rad() view returns (address)",
      "function radNode() view returns (bytes32)",
      "function minCommitmentAge() view returns (uint256)",
      "function registrationFeeRad() view returns (uint256)",
      "function commitWithPermit(bytes32, address, uint256, uint256, uint8, bytes32, bytes32)",
      "function register(string, address, uint256)",
      "function valid(string) pure returns (bool)",
      "function available(string) view returns (bool)"
    ],
    "token": [
      "function balanceOf(address) view returns (uint256)",
      "function approve(address, uint256) returns (bool)",
      "function allowance(address, address) view returns (uint256)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function name() pure returns (string)",
      "function nonces(address) view returns (uint256)"
    ],
    "resolver": [
      "function multicall(bytes[] calldata data) returns(bytes[] memory results)",
      "function setAddr(bytes32 node, address addr)",
      "function setText(bytes32 node, string calldata key, string calldata value)"
    ],
    "orgFactory": [
      "function createOrg(address) returns (address)",
      "function createOrg(address[], uint256) returns (address)",
      "event OrgCreated(address, address)"
    ],
    "org": [
      "function owner() view returns (address)",
      "function setOwner(address)",
      "function setName(string, address) returns (bytes32)"
    ],
    "vesting": [
      "function token() view returns (address)",
      "function totalVestingAmount() view returns (uint256)",
      "function vestingStartTime() view returns (uint256)",
      "function vestingPeriod() view returns (uint256)",
      "function cliffPeriod() view returns (uint256)",
      "function beneficiary() view returns (address)",
      "function interrupted() view returns (bool)",
      "function withdrawn() view returns (uint256)",
      "function withdrawableBalance() view returns (uint256)",
      "function withdrawVested()"
    ],
    "ens": ["function owner(bytes32 node) view returns (address)"]
  }
}
